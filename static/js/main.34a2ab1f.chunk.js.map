{"version":3,"sources":["components/Header.js","components/nav/TopNav.js","components/Footer.js","components/Series/PopularSeries.js","components/Movies/PopularMovies.js","components/Home.js","components/Movies/MovieItem.js","components/Movies/Movies.js","components/Series/SeriesItem.js","components/Series/Series.js","components/nav/BreadCrumb.js","App.js","serviceWorker.js","index.js"],"names":["Header","newLocation","currentLocation","this","props","location","pathname","className","React","Component","withRouter","TopNav","Fragment","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Footer","href","PopularSeries","src","alt","style","width","PopularMovies","as","Link","Home","MovieItem","useState","didLoad","setLoad","visibility","movie","images","url","title","onLoad","Movies","value","movies","map","key","SeriesItem","seriesItem","Series","series","BreadCrumb","aria-current","API","App","setMovies","setSeries","isLoading","setIsLoading","hasError","setHasErrors","useEffect","a","fetch","json","then","res","entries","filter","m","programType","releaseYear","slice","s","catch","err","fetchData","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.34a2ab1f.chunk.js","sourcesContent":["import React  from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n\r\n    \r\n    render() {\r\n        function setCurrentLocation(newLocation) {\r\n            if(newLocation === '/') \r\n                return newLocation = 'Titles';\r\n            else if (newLocation === '/movies')\r\n                return newLocation = 'Movies'\r\n            else if(newLocation === '/series')\r\n                return newLocation = 'Series';\r\n        } \r\n\r\n        let currentLocation = setCurrentLocation(this.props.location.pathname);\r\n            return (\r\n                <div className=\"bg-dark text-white\">\r\n                    <h4 className=\"container\">Popular { currentLocation  } </h4>\r\n                </div>\r\n            \r\n            )\r\n        }\r\n}\r\n\r\nexport default  withRouter(Header);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TopNav extends React.Component {\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-primary sticky-top\">\r\n                    <div className=\"container\">\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                            <Link className=\"navbar-brand\" to=\"/\"><span className=\"text-white\">DEMO STREAMING</span></Link>\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                \r\n                            </ul>\r\n                            <form className=\"form-inline my-2 my-lg-0\">\r\n                        \r\n                             <button type=\"button\" className=\"btn text-white\">Login</button>\r\n                            <button className=\"btn btn-outline-success my-2 my-sm-0 text-white\" type=\"submit\">Start Free Trial</button>\r\n                            </form>\r\n                        \r\n                     </div>\r\n                </div>\r\n            </nav>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopNav;","import React from 'react';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <footer className=\"footer\">\r\n                <div className=\"container\">\r\n                    <span className=\"text-muted\">Place sticky footer content here.</span>\r\n\r\n                </div>\r\n            </footer> */}\r\n             <footer className=\"bd-footer text-muted bg-dark\">\r\n            <div className=\"container-fluid p-3 p-md-5\">\r\n                <ul className=\"bd-footer-links d-flex\">\r\n                    <li className=\"ml-1 mr-3\"><a href=\"https://github.com/twbs/bootstrap\">Home</a></li>\r\n                    <li className=\"ml-5 mr-3\"><a href=\"https://twitter.com/getbootstrap\">Terms & Condition</a></li>\r\n                    <li className=\"ml-5 mr-3\"><a href=\"/docs/4.0/examples/\">Privacy Policy</a></li>\r\n                    <li className=\"ml-5 mr-3\"><a href=\"/docs/4.0/about/overview/\">Collection Statement</a></li>\r\n                    <li className=\"ml-5 mr-3\"><a href=\"/docs/4.0/about/overview/\">Help</a></li>\r\n                    <li className=\"ml-5 mr-3\"><a href=\"/docs/4.0/about/overview/\">Manage Account</a></li>\r\n                </ul>\r\n                <p className=\"ml-4\"> &copy; Copyright 2019. Demo Streaming. All rights reserved</p>\r\n                <div className=\"row mt-5\">\r\n                  <div className=\"col-md-4 col-sm-6 col-xs-12\">\r\n                    <ul className=\"social-icons d-flex\">\r\n                        <li className=\"ml-3 mr-2\"><a className=\"facebook\" href=\"#\"><i className=\"fa fa-facebook\"></i></a></li>\r\n                        <li className=\"ml-2 mr-2\"><a className=\"twitter\" href=\"#\"><i className=\"fa fa-twitter\"></i></a></li>\r\n                        <li className=\"ml-2 mr-2\"><a className=\"dribbble\" href=\"#\"><i className=\"fa fa-dribbble\"></i></a></li>\r\n                        <li className=\"ml-2 mr-2\"><a className=\"linkedin\" href=\"#\"><i className=\"fa fa-linkedin\"></i></a></li>\r\n                           \r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            </footer>\r\n       \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nexport default function PopularSeries() {\r\n    return (\r\n        <Link className=\"col-sm-2 mt-5\"  to=\"/series\">\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" \r\n                 src='assets/stream.png' alt='imaage' />\r\n            \r\n        </div>\r\n        <h5 style={{width: '10rem'}}>Popular Series</h5>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nexport default function PopularMovies() {\r\n    return (\r\n        \r\n        <Link className=\"col-sm-2 mt-5\" as={Link} to=\"/movies\">\r\n            <div className=\"card\">\r\n                <img className=\"card-img-top\" \r\n                    src='assets/stream.png' alt='imaage' />\r\n                \r\n            </div>\r\n            <h5 style={{width: '10rem'}}>Popular Movies</h5>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PopularSeries from './Series/PopularSeries';\r\nimport PopularMovies from './Movies/PopularMovies';\r\n\r\n\r\nconst Home = (props) => {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <PopularSeries />\r\n                    <PopularMovies />\r\n                </div>\r\n            </div>\r\n        \r\n{/* \r\n            <div className=\"container\">\r\n                 <div className=\"row \">\r\n                 <div className=\"col-sm-2 mt-5\">\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" \r\n                 src='assets/stream.png' alt='imaage' />\r\n            \r\n        </div>\r\n        <h5 style={{width: '10rem'}}>Popular Series</h5>\r\n        </div>\r\n                </div>\r\n            </div> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default function MovieItem(props) {\r\n    const [didLoad, setLoad] = React.useState(false);\r\n\r\n    const style = didLoad ? {} : {visibility: 'hidden'};\r\n\r\n    return (\r\n        <div className=\"col-sm-2 mt-5\">\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" \r\n                 src={props.movie.images['Poster Art'].url}\r\n                 style={style}\r\n                 alt={props.movie.title} \r\n                 onLoad={() => setLoad(true)}/>\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{props.movie.title}</h5>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport MovieItem from './MovieItem'\r\n\r\n\r\nexport default function Movies(props) {\r\n  //  const [data, setData] = useState([]);\r\n  //  const [sortType, setSortType] = useState('title');\r\n\r\n  \r\n\r\n  // useEffect(() => {\r\n  //   const sortArray = type => {\r\n  //     const types = {\r\n  //       title: 'title',\r\n  //       releaseYear: 'releaseYear'\r\n  //     };\r\n  //     const sortProperty = types[type];\r\n  //     const sorted = [...props.movies].sort((a, b) => b[sortProperty] - a[sortProperty]);\r\n  //     console.log(sorted);\r\n  //     setData(sorted);\r\n  //   };\r\n  //   sortArray(sortType);\r\n  // }, [sortType]); onChange={(e) => setSortType(e.target.value)\r\n\r\n    return (\r\n       <div className=\"container\">\r\n           <div className=\"row \">\r\n             Sort By: \r\n             <select>\r\n                <option value=\"\">Select Sort Option</option>\r\n                <option value=\"title\">Title</option>\r\n                <option value=\"releaseYear\">Year</option>\r\n            </select>\r\n             <div className=\"card-group\">\r\n               {props.movies.map(movie => (\r\n                    <MovieItem key={movie.title} movie={movie} />\r\n               ))}\r\n                </div>\r\n           </div>\r\n       </div>   \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SeriesItem(props) {\r\n    const [didLoad, setLoad] = React.useState(false);\r\n\r\n    const style = didLoad ? {} : {visibility: 'hidden'};\r\n\r\n    return (\r\n        <div className=\"col-sm-2 mt-5\">\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" \r\n                 src={props.seriesItem.images['Poster Art'].url}\r\n                 style={style}\r\n                 alt={props.seriesItem.title}\r\n                 onLoad={() => setLoad(true)}/>\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title text-left\">{props.seriesItem.title}</h5>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport SeriesItem from './SeriesItem'\r\n\r\nexport default function Series(props) {\r\n    return (\r\n        <div className=\"container\">\r\n           <div className=\"row \">\r\n             <div className=\"card-group\">\r\n               {props.series && props.series.map((seriesItem) => (\r\n                    <SeriesItem key={seriesItem.title} seriesItem={seriesItem} />\r\n               ))}\r\n                </div>\r\n           </div>\r\n       </div>   \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function BreadCrumb() {\r\n    return (\r\n        <div className=\"container\">\r\n            <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb justify-content-center align-items-center\">\r\n                <li className=\"breadcrumb-item\"><a href=\"/movies\">Movies</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\"><a href=\"/series\">Series</a></li>\r\n            </ol>\r\n            </nav>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport TopNav from './components/nav/TopNav';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Movies from './components/Movies/Movies';\nimport Series from './components/Series/Series';\n\nimport { Route } from \"react-router-dom\";\nimport BreadCrumb from './components/nav/BreadCrumb';\n\n// end point\nconst API = \"https://raw.githubusercontent.com/StreamCo/react-coding-challenge/master/feed/sample.json\";\n\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [ isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasErrors] = useState(null);\n\n   useEffect(() => {\n     async function fetchData() {\n       const res = await  fetch(API);\n       res\n        .json()\n        .then(res => {\n          setMovies(res.entries.filter(m => m.programType === 'movie' && m.releaseYear >= 2010).slice(0, 21));\n          setSeries(res.entries.filter(s => s.programType === 'series' && s.releaseYear >= 2010).slice(0,21));\n          setIsLoading(false);\n        })\n        .catch(err => \n          { \n            setIsLoading(false);\n            setHasErrors(true)\n          }) \n     }\n     fetchData();\n   }, []) \n  //  if (isLoading) return <p className=\"container\">Loading...</p>\n  //  if (hasError) return <p className=\"container\"> Oops, something went wrong...</p>\n  \n  return (\n    <div>\n      <TopNav />\n      <Header />\n      <BreadCrumb />   \n     \n\n          {isLoading && !hasError ? (\n          <div className=\"container\">Loading...</div>\n          ) : hasError ? (\n            <div className=\"container\">Oops, something went wrong...</div>\n          ) : (\n            <Route exact path=\"/\" component={Home} />\n          )}\n\n      <Route path=\"/movies\">\n        <Movies movies={movies} />\n      </Route>\n      <Route path=\"/series\">\n          <Series series={series}/> \n      </Route>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n       <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}